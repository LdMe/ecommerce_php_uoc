
services:
  app:
    image: ecommerce_php
    build: .
    container_name: ${APP_HOST}
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    networks:
      - ecommerce_internal_network
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    container_name: php_webserver
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - app
    networks:
      - ecommerce_internal_network
      - ecommerce_network

  db:
    image: mysql:8.0
    container_name: ${DB_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      #- db/data:/var/lib/mysql
      - ./db/conf/conf_utf8.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./db/scripts:/docker-entrypoint-initdb.d:ro
    ports:
      - ${DB_PORT}:3306
    networks:
      - ecommerce_internal_network
      - ecommerce_network

networks:
  ecommerce_internal_network:
    driver: bridge
    internal: true
  ecommerce_network:
    driver: bridge


