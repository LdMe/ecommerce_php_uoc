-- MySQL Script generated by MySQL Workbench
-- jue 21 nov 2024 21:27:51
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ecommerce` ;

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecommerce` ;
USE `ecommerce` ;

-- -----------------------------------------------------
-- Table `ecommerce`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`product` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`product` (
  `product_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `price` INT NOT NULL,
  `image` VARCHAR(255) NULL,
  PRIMARY KEY (`product_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`category` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`category` (
  `category_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `parent_category_id` INT UNSIGNED NULL,
  PRIMARY KEY (`category_id`),
  INDEX `fk_category_category1_idx` (`parent_category_id` ASC) VISIBLE,
  CONSTRAINT `fk_category_category1`
    FOREIGN KEY (`parent_category_id`)
    REFERENCES `ecommerce`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`client` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`client` (
  `client_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`client_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`purchase_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`purchase_status` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`purchase_status` (
  `purchase_status_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`purchase_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`billing_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`billing_info` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`billing_info` (
  `billing_info_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(255) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `tel` VARCHAR(45) NULL,
  `client_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`billing_info_id`),
  CONSTRAINT `fk_billing_info_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommerce`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`purchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`purchase` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`purchase` (
  `purchase_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `client_id` INT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `purchase_status_id` INT UNSIGNED NOT NULL,
  `billing_info_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`purchase_id`),
  INDEX `fk_cart_client_idx` (`client_id` ASC) VISIBLE,
  INDEX `fk_purchase_purchase_status1_idx` (`purchase_status_id` ASC) VISIBLE,
  INDEX `fk_purchase_billing_info1_idx` (`billing_info_id` ASC) VISIBLE,
  CONSTRAINT `fk_cart_client`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommerce`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_purchase_status1`
    FOREIGN KEY (`purchase_status_id`)
    REFERENCES `ecommerce`.`purchase_status` (`purchase_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_billing_info1`
    FOREIGN KEY (`billing_info_id`)
    REFERENCES `ecommerce`.`billing_info` (`billing_info_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`purchase_has_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`purchase_has_product` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`purchase_has_product` (
  `purchase_id` INT UNSIGNED NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  `quantity` INT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`purchase_id`, `product_id`),
  INDEX `fk_cart_has_product_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_cart_has_product_cart1_idx` (`purchase_id` ASC) VISIBLE,
  CONSTRAINT `fk_cart_has_product_cart1`
    FOREIGN KEY (`purchase_id`)
    REFERENCES `ecommerce`.`purchase` (`purchase_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cart_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommerce`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`product_has_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`product_has_category` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`product_has_category` (
  `product_id` INT UNSIGNED NOT NULL,
  `category_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`product_id`, `category_id`),
  INDEX `fk_product_has_category_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_product_has_category_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_has_category_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommerce`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_category_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `ecommerce`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`client_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`client_type` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`client_type` (
  `client_type_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`client_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`registered_client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`registered_client` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`registered_client` (
  `client_id` INT UNSIGNED NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `name` VARCHAR(80) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `client_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`client_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_registered_client_client1_idx` (`client_id` ASC) VISIBLE,
  INDEX `fk_registered_client_client_type1_idx` (`client_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_registered_client_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `ecommerce`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_registered_client_client_type1`
    FOREIGN KEY (`client_type_id`)
    REFERENCES `ecommerce`.`client_type` (`client_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`language` (
  `language_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `iso_code` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`language_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `iso_code_UNIQUE` (`iso_code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`category_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`category_has_language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`category_has_language` (
  `category_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`category_id`, `language_id`),
  INDEX `fk_category_has_language_language1_idx` (`language_id` ASC) VISIBLE,
  INDEX `fk_category_has_language_category1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_category_has_language_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `ecommerce`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_category_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `ecommerce`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`product_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`product_has_language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`product_has_language` (
  `product_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`product_id`, `language_id`),
  INDEX `fk_product_has_language_language1_idx` (`language_id` ASC) VISIBLE,
  INDEX `fk_product_has_language_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_has_language_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `ecommerce`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `ecommerce`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`purchase_status_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`purchase_status_has_language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`purchase_status_has_language` (
  `purchase_status_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`purchase_status_id`, `language_id`),
  INDEX `fk_purchase_status_has_language_language1_idx` (`language_id` ASC) VISIBLE,
  INDEX `fk_purchase_status_has_language_purchase_status1_idx` (`purchase_status_id` ASC) VISIBLE,
  CONSTRAINT `fk_purchase_status_has_language_purchase_status1`
    FOREIGN KEY (`purchase_status_id`)
    REFERENCES `ecommerce`.`purchase_status` (`purchase_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_status_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `ecommerce`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`client_type_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`client_type_has_language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`client_type_has_language` (
  `client_type_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`client_type_id`, `language_id`),
  INDEX `fk_user_role_has_language_language1_idx` (`language_id` ASC) VISIBLE,
  INDEX `fk_user_role_has_language_user_role1_idx` (`client_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_role_has_language_user_role1`
    FOREIGN KEY (`client_type_id`)
    REFERENCES `ecommerce`.`client_type` (`client_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `ecommerce`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`text`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`text` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`text` (
  `text_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`text_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`text_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`text_has_language` ;

CREATE TABLE IF NOT EXISTS `ecommerce`.`text_has_language` (
  `text_id` VARCHAR(45) NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `content` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`text_id`, `language_id`),
  INDEX `fk_text_has_language_language1_idx` (`language_id` ASC) VISIBLE,
  INDEX `fk_text_has_language_text1_idx` (`text_id` ASC) VISIBLE,
  CONSTRAINT `fk_text_has_language_text1`
    FOREIGN KEY (`text_id`)
    REFERENCES `ecommerce`.`text` (`text_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_text_has_language_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `ecommerce`.`language` (`language_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ecommerce` ;

-- -----------------------------------------------------
-- Placeholder table for view `ecommerce`.`product_with_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`product_with_language` (`product_id` INT, `price` INT, `image` INT, `language_id` INT, `name` INT, `description` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ecommerce`.`category_with_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`category_with_language` (`category_id` INT, `parent_category_id` INT, `language_id` INT, `name` INT, `description` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ecommerce`.`client_type_with_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`client_type_with_language` (`client_type_id` INT, `language_id` INT, `name` INT, `description` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ecommerce`.`purchase_status_with_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`purchase_status_with_language` (`purchase_status_id` INT, `language_id` INT, `name` INT, `description` INT);

-- -----------------------------------------------------
-- Placeholder table for view `ecommerce`.`text_with_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`text_with_language` (`text_id` INT, `content` INT, `language_id` INT);

-- -----------------------------------------------------
-- View `ecommerce`.`product_with_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`product_with_language`;
DROP VIEW IF EXISTS `ecommerce`.`product_with_language` ;
USE `ecommerce`;
CREATE  OR REPLACE VIEW `product_with_language` AS
SELECT product.*,language_id,name,description
FROM product
JOIN product_has_language as phl ON phl.product_id=product.product_id;

-- -----------------------------------------------------
-- View `ecommerce`.`category_with_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`category_with_language`;
DROP VIEW IF EXISTS `ecommerce`.`category_with_language` ;
USE `ecommerce`;
CREATE  OR REPLACE VIEW `category_with_language` AS
SELECT category.*,language_id,name,description
FROM category
JOIN category_has_language as chl ON chl.category_id=category.category_id;

-- -----------------------------------------------------
-- View `ecommerce`.`client_type_with_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`client_type_with_language`;
DROP VIEW IF EXISTS `ecommerce`.`client_type_with_language` ;
USE `ecommerce`;
CREATE  OR REPLACE VIEW `client_type_with_language` AS
SELECT client_type.*,language_id,name,description
FROM client_type
JOIN client_type_has_language as cthl ON cthl.client_type_id=client_type.client_type_id;

-- -----------------------------------------------------
-- View `ecommerce`.`purchase_status_with_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`purchase_status_with_language`;
DROP VIEW IF EXISTS `ecommerce`.`purchase_status_with_language` ;
USE `ecommerce`;
CREATE  OR REPLACE VIEW `purchase_status_with_language` AS
SELECT purchase_status.*,language_id,name,description
FROM purchase_status
JOIN purchase_status_has_language as pshl ON pshl.purchase_status_id=purchase_status.purchase_status_id;

-- -----------------------------------------------------
-- View `ecommerce`.`text_with_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ecommerce`.`text_with_language`;
DROP VIEW IF EXISTS `ecommerce`.`text_with_language` ;
USE `ecommerce`;
CREATE  OR REPLACE VIEW `text_with_language` AS
SELECT text.*, content,language_id
FROM text
JOIN text_has_language as thl ON thl.text_id=text.text_id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
